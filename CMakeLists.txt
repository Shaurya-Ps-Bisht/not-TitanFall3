# CMakeList.txt : CMake project for vulkan_guide, include source and define
# project specific logic here.
#
cmake_minimum_required (VERSION 3.8)

project ("not Titanfall 3")


find_package(OpenGL REQUIRED)

add_subdirectory(Dependencies)

set (CMAKE_RUNTIME_OUTPUT_DIRECTORY "${PROJECT_SOURCE_DIR}/bin")
set (CMAKE_LIBRARY_OUTPUT_DIRECTORY "${PROJECT_SOURCE_DIR}/bin")
set (CMAKE_EXPORT_COMPILE_COMMANDS ON)

add_subdirectory(src)
# add_subdirectory(res)

# find_program(GLSL_VALIDATOR glslangValidator HINTS /usr/bin /usr/local/bin $ENV{VULKAN_SDK}/Bin/ $ENV{VULKAN_SDK}/Bin32/)
# message(STATUS "GLSL_VALIDATOR found at: ${GLSL_VALIDATOR}")



# file(GLOB_RECURSE GLSL_SOURCE_FILES
#     "${PROJECT_SOURCE_DIR}/shaders/*.frag"
#     "${PROJECT_SOURCE_DIR}/shaders/*.vert"
#     "${PROJECT_SOURCE_DIR}/shaders/*.comp"
#     )
#
# foreach(GLSL ${GLSL_SOURCE_FILES})
#   message(STATUS "BUILDING SHADER")
#   get_filename_component(FILE_NAME ${GLSL} NAME)
#   set(SPIRV "${PROJECT_SOURCE_DIR}/shaders/${FILE_NAME}.spv")
#   message(STATUS ${GLSL})
#   message(STATUS COMMAND ${GLSL_VALIDATOR} -V ${GLSL} -o ${SPIRV})
#   add_custom_command(
#     OUTPUT ${SPIRV}
#     COMMAND ${GLSL_VALIDATOR} -V ${GLSL} -o ${SPIRV} || echo "Error compiling ${GLSL}"
#     DEPENDS ${GLSL})
#   list(APPEND SPIRV_BINARY_FILES ${SPIRV})
# endforeach(GLSL)
#
# add_custom_target(
#     Shaders 
#     DEPENDS ${SPIRV_BINARY_FILES}
#     )
